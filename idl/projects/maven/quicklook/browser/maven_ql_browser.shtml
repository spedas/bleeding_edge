<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>


<title>MAVEN QL BROWSER</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<!-- Version 9: Click coordinates working, also integrated original layout navigation -->
<!-- Version 9: Works on Firefox & IE7 -->
<!-- Version 10: Adding plot and zoom keys, default no data/error responce -->
<link rel="stylesheet" type="text/css" href="/new_menu/ddlevelsfiles/ddlevelsmenu-base.css" />
<link rel="stylesheet" type="text/css" href="/new_menu/ddlevelsfiles/ddlevelsmenu-topbar_full.css" />
<link rel="stylesheet" type="text/css" href="/new_menu/ddlevelsfiles/ddlevelsmenu-sidebar.css" />
<link rel="stylesheet" type="text/css" href="/new_menu/menu.css" />

<link rel="icon" type="image/png" href="http://themis.ssl.berkeley.edu/favicon.ico" />

<script type="text/javascript" src="/new_menu/ddlevelsfiles/ddlevelsmenu.js">

/***********************************************
* All Levels Navigational Menu- (c) Dynamic Drive DHTML code library (http://www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

</script>

<link rel="stylesheet" type="text/css" href="common/css/themisStyles.css" media="screen" />
<link rel="stylesheet" type="text/css" href="common/css/printStyles.css" media="print" /> 

<style type="text/css">
body {background-color: grey}
//t1 {border: 1pt solid gray; padding: 1pt;}
</style>

<script type="text/javascript">

var delta = 0 ;
var previous_path = ''; 
  dont_load_image = 0; 

function getUrlParameters(parameter, staticURL, decode){
    var currLocation = (staticURL.length)? staticURL : window.location.search;
    if (currLocation.trim() == ""){return false;}
    parArr = currLocation.split("?")[1].split("&");
    returnBool = true;
   
    for(var i = 0; i < parArr.length; i++){
	parr = parArr[i].split("=");
	if(parr[0] == parameter){
	    return (decode) ? decodeURIComponent(parr[1]) : parr[1];
	    returnBool = true;
	}else{
	    returnBool = false;            
	}
    }  
    if(!returnBool) return false;  
}

// loadFdbFile loads a .fdb file for the given day, returns an array
// the .fdb file holds orbit file names, start and end times
function loadFdbFile(year, month, day) {
    var fdbFile = 'https://sprg.ssl.berkeley.edu/data/maven/data/sci/pfp/l2/plots/'+year+'/'+month+'/.fdb'+year+month+day ; 
    var ext = FileHelper.readStringFromFileAtPath (fdbFile); 
    var ext_array = ext.split(',');
    //at least 3 elements in a valid file
    if (ext_array.length < 3) {ext_array[0] = "FDB_NOT_FOUND";}       
    return ext_array;
}

// loadFdbFile0 loads a .fdb file for the given day, returns the first orbit file
function loadFdbFile0(year, month, day) {
    var fdbFile = 'https://sprg.ssl.berkeley.edu/data/maven/data/sci/pfp/l2/plots/'+year+'/'+month+'/.fdb'+year+month+day ; 
    var ext = FileHelper.readStringFromFileAtPath (fdbFile); 
    var ext_array = ext.split(',');
    var firstfile = ext_array[0];
    var firstfile_len = firstfile.length;
    var orbno = firstfile.substr(firstfile_len-6,6);
   //at least 3 elements in a valid file
    if (ext_array.length < 3) {orbno = "00FIRST";}       
    return orbno;
}

// FileHelper reads a text file, using the XMLHttpRequest object
function FileHelper()
{}
{
    FileHelper.readStringFromFileAtPath = function(pathOfFileToReadFrom)
	{
	    var request = new XMLHttpRequest();
	    request.open("GET", pathOfFileToReadFrom, false);
	    request.send(null);
	    var returnValue = request.responseText;
	    return returnValue;
	}
}

//displayImage gets the fielname and path for an image, and displays it
function displayImage()
{ 
//The remote data directory is hard-coded
    var pSite = "https://sprg.ssl.berkeley.edu/data/maven/data/sci";
    var fileName;
    var orbfile;
    var hour = document.getElementById("hour").value ;
    var sumType = document.getElementById("sumplotType").value ;
    var year = document.getElementById("set_year").value ;
    var month = document.getElementById("set_month").value ;
    var day = document.getElementById("set_day").value ;
    var orbno = document.getElementById("orbno").value ;
    if (sumType=="mvn")
	{
	    var type = document.getElementById("subtype").value ;
	    if (type=="pfpl2")
		{
		    if (hour=="0024") //full day plots
			{
			    fileName = "mvn_pfp_l2_" + year + month + day+ ".png" ;
			    //set orbno to "00FIRST" every time you plot a full-day plot
			    document.getElementById("orbno").value = "00FIRST";
			}
		    else if (hour=="ltrm") //two-week plots
			{
			    fileName = "mvn_pfp_l2_long_" + year + month + day+ "_000000.png" ;
			    //set orbno to "00FIRST" every time you plot a long-term plot
			    document.getElementById("orbno").value = "00FIRST";
			}
		    else
			{
			    if (orbno=="00FIRST")
				{
				    //plot the first orbit of the day
				    orbno = loadFdbFile0(year, month, day);
				    document.getElementById("orbno").value = orbno;
				}
			    if (hour=="1orb")
			        {
			          //full orbit plot
			          fileName = "mvn_pfp_l2_" + year + month + day + '_' + orbno + ".png" ;
			        }
			    else
			        {
			          //periapsis orbit plot
			          fileName = "mvn_pfp_l2_peri_" + year + month + day + '_' + orbno + ".png" ;
			        }
			}
		}
	    else
		{
		    fileName = "mvn_" + type + "_ql_" + year + month + day+ ".png" ;
		}
	    //Get the full path for the file
	    if (type=="pfpl2")
		{
		    var fullPath = pSite + "/pfp/l2/plots/" + year + "/" + month + "/" + fileName ;
		}
	    else
		{
		    var fullPath = pSite + "/" + type+ "/ql/" + year + "/"+ fileName ;
		}
	    
	}

    if (year!="" && month!="" && day!="" && hour!="" && sumType!="" && type!="") {  
	top_url = "?" + "year=" + year + "&month=" + month + "&day=" + day + "&hour=" + hour + "&sumType=" + sumType + "&type=" + type ; 
	top_title = year + "-" + month + "-" + day + " " + hour + " - " + sumType + " - " + type ; 
	if (previous_path != top_url)  {
	    //window.history.pushState(null,top_title, top_url);			
	    if(history.pushState && history.replaceState) {
		//history.pushState({"id":top_url}, document.title, location.href);
		history.pushState({"id":top_url}, top_title, top_url);
		window.onpopstate = function(e) {
		    //alert(e.state.id);
		    //goto_page(e.state.id);
		    //perhaps use an ajax call to update content based on the e.state.id
		};
	    }		
	    
	}
	previous_path = top_url;
    }
		
    var showtheimgel = document.getElementById("showtheimg");
    showtheimgel.src = fullPath ;
    //alert(fullPath);
    document.getElementById("textNote").innerHTML = fullPath;
    //Diagnostic
}

//converts a number to a string of fixed width by applying '0's
//currently doesn't account for leading characters like '-' signs.
function num2str(inInt,len)
{
    var outStr = inInt.toString();
    var inLen = inInt.toString().length;
    var i;

    for (i = 0;i < (len-inLen);i++) { 
	outStr = "0" + outStr
	    }
  
    return outStr;

}

//Simple where function for string arrays
function searchStringInArray (str, strArray) {
    for (var j=0; j<strArray.length; j++) {
        if (strArray[j].match(str)) return j;
    }
    return -1;
}

//changeImgSrc is called when the next, and last buttons are hit
function changeImgSrc(delType)
{
    var hour = document.getElementById("hour").value ;
    var dateChange = 0 ;
    // Test Ouput
    delta = delta + 1 ;

    var sumType = document.getElementById("sumplotType").value ;
    var intro_year = document.getElementById("set_year").value ;
    var intro_month = document.getElementById("set_month").value ;
    var adjmonth = document.getElementById("set_month").value - 1 ;
    var intro_day = document.getElementById("set_day").value ;
    var dateTime = new Date(intro_year, adjmonth, intro_day) ;
    // Currently only four types of plot, 24 hour, 1orb and periapsis, orbp and long term
    if (hour == "0024")
	{
	    var lowHour = parseInt(hour.substring(0,2),10);  //warning, the parseInt function can be finicky if the required base is not provided
	    var highHour = parseInt(hour.substring(2,4),10); //for example parseInt("08") will return 0 and not 8, but parseInt("08",10) returns 8
	    var interval = highHour-lowHour;

  // Determine how/if the date should be changed
  // Uses a little bit of modular arithmetic to make code more 
  // general, concise, and maintainable.
  
	    if (delType == "dec") {
		interval *= -1;
	    } else if (delType != "inc") {
		interval = 0;
	    }
	    var quotient = Math.floor((lowHour + interval)/24);

	    lowHour = (lowHour + interval) % 24;
	    if (lowHour < 0) {  //javascript modulus returns negative mod...
		lowHour += 24;
	    }
	    highHour = lowHour + Math.abs(interval);
	    dateTime.setDate(dateTime.getDate() + quotient) ;
	    string_year = num2str(dateTime.getFullYear(),4);
	    string_month = num2str(dateTime.getMonth() + 1,2);
	    string_day = num2str(dateTime.getDate(),2);
	}
    else if (hour == "ltrm") //essentially the same as the hour = 0024 option, will increment by day
	{
	    // var lowHour = parseInt(hour.substring(0,2),10);  //warning, the parseInt function can be finicky if the required base is not provided
	    // var highHour = parseInt(hour.substring(2,4),10); //for example parseInt("08") will return 0 and not 8, but parseInt("08",10) returns 8
            var lowHour = 0;
	    var highHour = 24;
	    var interval = highHour-lowHour;

  // Determine how/if the date should be changed
  // Uses a little bit of modular arithmetic to make code more 
  // general, concise, and maintainable.
  
	    if (delType == "dec") {
		interval *= -1;
	    } else if (delType != "inc") {
		interval = 0;
	    }
	    var quotient = Math.floor((lowHour + interval)/24);

	    lowHour = (lowHour + interval) % 24;
	    if (lowHour < 0) {  //javascript modulus returns negative mod...
		lowHour += 24;
	    }
	    highHour = lowHour + Math.abs(interval);
	    dateTime.setDate(dateTime.getDate() + quotient) ;
	    string_year = num2str(dateTime.getFullYear(),4);
	    string_month = num2str(dateTime.getMonth() + 1,2);
	    string_day = num2str(dateTime.getDate(),2);
	}
    else //hour is "1orb" or "orbp"
	{
  //Read from the .fdb files
	    var orbno = document.getElementById("orbno").value;
	    var ext_array = loadFdbFile(intro_year, intro_month, intro_day);
	    if (ext_array[0] == "FDB_NOT_FOUND") {
		return;
	    }
  //Here extract the orbit numbers included in the file -- the orbit number is in the filename
  //but since this has been input in a 1d array, you need to extract the first element in each 
  //line. e.g., 
  //mvn_pfp_l2_20141211_000386,20141210203809,20141211011305,
  //mvn_pfp_l2_20141211_000387,20141211011305,20141211054811,
  //mvn_pfp_l2_20141211_000388,20141211054811,20141211102307,
  //mvn_pfp_l2_20141211_000389,20141211102307,20141211145803,
  //mvn_pfp_l2_20141211_000390,20141211145803,20141211193258,
  //mvn_pfp_l2_20141211_000391,20141211193258,20141212000755
	    var ext_len = ext_array.length;
	    var elen3 = ext_len/3; //number of lines
	    var elen31 = elen3-1;
	    var ofile = []; //2d arrays do not seem to work so well...
	    var ostart = [];
	    var oend = [];
	    var onumarr = [];
	    var onumi;
	    var tmpp;
	    var onumi_len;
	    for (var i = 0; i < elen3; i++) {
		ofile.push(ext_array[i*3]);
		ostart.push(ext_array[i*3+1]);
		oend.push(ext_array[i*3+2]);
		onumi = ext_array[i*3];
		onumi_len = onumi.length;
		tmpp = onumi.substr(onumi_len-6,6);
		onumarr.push(tmpp);
	    }
//Find the current orbno in the onumarr array
	    var jorb = searchStringInArray(orbno, onumarr);
	    var orbnum_int = parseInt(orbno, 10);
	    var neworbno;
//If the current orbit is not in the current file, we don't know what to do
//so keep the same date, and goto 00FIRST
	    if (jorb == -1)
		{
		    document.getElementById("orbno").value = "00FIRST";
		}
	    else
		{
//Next the new orbit number, if we decrease, then if jorb is 0, subtract a day, 
//Otherwise the day stays the same
		    var quotient = 0;
		    if (delType == "dec")
			{
			    neworbno = num2str(orbnum_int-1,6);
			    if (jorb == 0) {quotient = -1; }
			}
//If we increase, then if jorb is elen3-1, then add a day
		    else
			{
			    neworbno = num2str(orbnum_int+1,6);
			    if (jorb == elen31) {quotient = +1; }
			}
		    dateTime.setDate(dateTime.getDate() + quotient) ;
		    string_year = num2str(dateTime.getFullYear(),4);
		    string_month = num2str(dateTime.getMonth() + 1,2);
		    string_day = num2str(dateTime.getDate(),2);
		    document.getElementById("orbno").value = neworbno;
		}
	}
  // Update form values for year, month, and day
    document.getElementById("set_year").value = string_year ;
    document.getElementById("set_month").value = string_month ;
    document.getElementById("set_day").value = string_day ;
    document.getElementById("hour").value=hour ;
    syncBottomToTop2();

    displayImage();
}
//firstload loads at the start
function firstLoad()
{
    // Grab current Date
    var currentDate = new Date() ;
    // Break out year, month, and day
    var currentYear = currentDate.getFullYear() ;
    var currentYearString = currentYear.toString() ;
    var currentMonth = currentDate.getMonth() + 1 ;
    var currentMonthString = currentMonth.toString() ;
    if (currentMonthString.length==1)
	{
	    currentMonthString = "0" + currentMonthString ;
	}
    var currentDay = currentDate.getDate() ;
    var currentDayString = currentDay.toString() ;
    if (currentDayString.length==1)
	{
	    currentDayString = "0" + currentDayString ;
	}
    // Set form elements
    
    document.getElementById("set_year").value = currentYearString ;
    document.getElementById("set_month").value = currentMonthString ;
    document.getElementById("set_day").value = currentDayString ;
    
    document.getElementById("set_year_bottom").value = currentYearString ;
    document.getElementById("set_month_bottom").value = currentMonthString ;
    document.getElementById("set_day_bottom").value = currentDayString ;
	
    document.weboptions.sumplotType[0].selected = true;
    document.weboptions_bottom.sumplotType_bottom[0].selected = true;
    document.getElementById("orbno").value = "00FIRST"
}
//nodata plots up a blank image if there is no plot
function nodata() {
    var sumType = document.getElementById("sumplotType").value;
    var type = document.getElementById("subtype").value ;
    document.getElementById("showtheimg").src = "http://themis.ssl.berkeley.edu/no_file.gif" ;
}
//updateMenus updates the menus
function updateMenus(selectedcitygroup){
    //dont_load_image = 1; 
    syncBottomToTop();
    var sumplotType=document.weboptions.sumplotType;
    var subtypelist=document.weboptions.subtype;
    var hourlist=document.weboptions.hour;

  //second set of menus at the bottom of the document
    var subtypelist_bottom=document.weboptions_bottom.subtype_bottom ;
    var hourlist_bottom=document.weboptions_bottom.hour_bottom;

    for (i=0;i<hourlist.length;i++) 
	{
	    if (hourlist[i].selected) 
		{
		    var hour_selected_text = hourlist[i].text;
		}
	}

    for (i=0;i<subtypelist.length;i++) 
	{
	    if (subtypelist[i].selected) 
		{
		    var subtype_selected_text = subtypelist[i].text;
		}
	}

 //testing
 //document.write("<h2>"+selected_text+"</h2>");

    var subtype=new Array();
    subtype[0]=["PFP L2|pfpl2", "Overview|pfp", "LPW|lpw", "MAG|mag", "SEP|sep", "STA|sta", "SWEA|swe","SWIA|swi"];
    subtype[1]=["PFP L2|pfpl2", "Overview|pfp", "LPW|lpw", "MAG|mag", "SEP|sep", "STA|sta", "SWEA|swe","SWIA|swi"];
    subtype[2]=["PFP L2|pfpl2", "Overview|pfp", "LPW|lpw", "MAG|mag", "SEP|sep", "STA|sta", "SWEA|swe","SWIA|swi"];
    subtype[3]=["PFP L2|pfpl2", "Overview|pfp", "LPW|lpw", "MAG|mag", "SEP|sep", "STA|sta", "SWEA|swe","SWIA|swi"];
    subtype[4]=["PFP L2|pfpl2", "Overview|pfp", "LPW|lpw", "MAG|mag", "SEP|sep", "STA|sta", "SWEA|swe","SWIA|swi"];
  
  //note,  the text of these options is used to make sure that selection is maintained when probe/plottype is changed, if possible.
  //If two similar meaning options are phrased slightly differently, this selection will not be maintained.(For example, one may say "hr", the other, "hour"
    var hour=new Array();
    hour[0]=["Full-day|0024", "Single-Orbit|1orb", "Orbit-Peri|orbp", "Long-term|ltrm"];
    hour[1]=["Full-day|0024", "Single-Orbit|1orb", "Orbit-Peri|orbp", "Long-term|ltrm"];
    hour[2]=["Full-day|0024", "Single-Orbit|1orb", "Orbit-Peri|orbp", "Long-term|ltrm"];
    hour[3]=["Full-day|0024", "Single-Orbit|1orb", "Orbit-Peri|orbp", "Long-term|ltrm"];
    hour[4]=["Full-day|0024", "Single-Orbit|1orb", "Orbit-Peri|orbp", "Long-term|ltrm"];

    subtypelist.options.length=0;
    subtypelist_bottom.options.length=0;
    hourlist.options.length=0;
    hourlist_bottom.options.length=0;

    var i=0 ;
    for (i=0; i<subtype[selectedcitygroup].length; i++){
	subtypelist.options[subtypelist.options.length]=new Option(subtype[selectedcitygroup][i].split("|")[0], subtype[selectedcitygroup][i].split("|")[1]) ;}
    for (i=0; i<hour[selectedcitygroup].length; i++){
	hourlist.options[hourlist.options.length]=new Option(hour[selectedcitygroup][i].split("|")[0], hour[selectedcitygroup][i].split("|")[1]) ;}

    for (i=0; i<subtype[selectedcitygroup].length; i++){
	subtypelist_bottom.options[subtypelist_bottom.options.length]=new Option(subtype[selectedcitygroup][i].split("|")[0], subtype[selectedcitygroup][i].split("|")[1]) ;}
    for (i=0; i<hour[selectedcitygroup].length; i++){
	hourlist_bottom.options[hourlist_bottom.options.length]=new Option(hour[selectedcitygroup][i].split("|")[0], hour[selectedcitygroup][i].split("|")[1]) ;}


  //make sure that the hour length selected previously is the hour length set after change, if possible
    for (i=0;i<hourlist.length;i++)
	{
	    if (hourlist.options[i].text == hour_selected_text)
		{		
		    hourlist.options[i].selected=1;
		    hourlist_bottom.options[i].selected=1;
		}
	}

    for (i=0;i<subtypelist.length;i++)
	{ 
	    if (subtypelist.options[i].text == subtype_selected_text)
		{		
		    subtypelist.options[i].selected=0;
		    subtypelist_bottom.options[i].selected=0;
		}
	}
	//displayImage();
    if(dont_load_image!=1){ displayImage();	}
    dont_load_image = 0;
}

//only displays image if autoload is set
function autoloadDisplayImage() {
    if (getAutoloadParam() == 1 || getAutoloadParam() == -1) {
//    syncBottomToTop();
	displayImage();
    }
}

function displayImageBottom() {

//	dont_load_image = 1; 
    syncTopToBottom();
    displayImage();
}

//only displays image if autoload is set
function autoloadDisplayImageBottom() {
    if (getAutoloadParam() == 1 || getAutoloadParam() == -1) {
	displayImageBottom();
    }
}

function updateMenusBottom(selectedcitygroup) {
//	dont_load_image = 1; 
    syncTopToBottom();
    updateMenus(selectedcitygroup);
}

function getAutoloadParam() {

    var query = window.location.search.substring(1);
    var parms = query.split('&');

    for (var i = 0;i<parms.length;i++) {
	var pos = parms[i].indexOf('=');
	if (pos > 0) {
	    var key = parms[i].substring(0,pos);
	    var val = parms[i].substring(pos+1);
	    if (key.toLowerCase() == "autoload") {
		return val;
	    }
	} 
    } 

    return -1;

}
// Sync bottom to top menus, but do not reset orbno value
function syncBottomToTop2() {
    document.getElementById("set_year_bottom").value = document.getElementById("set_year").value;
    document.getElementById("set_month_bottom").value = document.getElementById("set_month").value ;
    document.getElementById("set_day_bottom").value = document.getElementById("set_day").value;
    document.getElementById("hour_bottom").value=document.getElementById("hour").value;
    document.getElementById("sumplotType_bottom").value=document.getElementById("sumplotType").value;
    document.getElementById("subtype_bottom").value=document.getElementById("subtype").value; 
    if(dont_load_image!=1){ displayImage();	}
    dont_load_image = 0;
}
// Sync bottom to top menus, reset orbno value to "00FIRST"
function syncBottomToTop() {
    document.getElementById("set_year_bottom").value = document.getElementById("set_year").value;
    document.getElementById("set_month_bottom").value = document.getElementById("set_month").value ;
    document.getElementById("set_day_bottom").value = document.getElementById("set_day").value;
    document.getElementById("hour_bottom").value=document.getElementById("hour").value;
    document.getElementById("sumplotType_bottom").value=document.getElementById("sumplotType").value;
    document.getElementById("subtype_bottom").value=document.getElementById("subtype").value; 
    var hour1 = document.getElementById("hour").value;
    if(hour1=="1orb" || hour1=="orbp")
        {
            document.getElementById("orbno").value = "00FIRST";
        }
    if(dont_load_image!=1){ displayImage();	}
    dont_load_image = 0;
}
// Sync top to bottom menus, reset orbno value to "00FIRST"
function syncTopToBottom() {
    document.getElementById("set_year").value = document.getElementById("set_year_bottom").value;
    document.getElementById("set_month").value = document.getElementById("set_month_bottom").value ;
    document.getElementById("set_day").value = document.getElementById("set_day_bottom").value;
    document.getElementById("hour").value=document.getElementById("hour_bottom").value;
    document.getElementById("sumplotType").value=document.getElementById("sumplotType_bottom").value;
    document.getElementById("subtype").value=document.getElementById("subtype_bottom").value;
    var hour1 = document.getElementById("hour").value;
    if(hour1=="1orb" || hour1=="orbp")
        {
            document.getElementById("orbno").value = "00FIRST";
        }
    if(dont_load_image!=1){ displayImage();	}
    dont_load_image = 0;
}

//goto_page is called on startup
function goto_page() {
    var selindex = 0;
    var currentdate = new Date();
    var datetime = "Today: "+currentdate.getDate()+"/"+(currentdate.getMonth()+1)+"/"+currentdate.getFullYear();
    var cur_url = document.URL;
    var yearp = currentdate.getFullYear();
    var monthp = (currentdate.getMonth()+1);
    var dayp = currentdate.getDate();
    var hourp = "0024";
    var sumTypep = "mvn";
    var typep = "pfpl2"; 
	
/*
//	getUrlParameters("parameterName", "", true);
	var yearp = getUrlParameters("year", "", false); 
	var monthp = getUrlParameters("month", "", false);  
	var dayp = getUrlParameters("day", "", false);  
	var hourp = getUrlParameters("hour", "", false);  
	var sumTypep = getUrlParameters("sumType", "", false); 
	var typep = getUrlParameters("type", "", false);  
*/	
    firstLoad();
    dont_load_image = 1;
    updateMenus(0);	
	
	//if (yearp==""||monthp==""||dayp==""||hourp==""||sumTypep==""||typep=="") { firstLoad(); updateMenus(0); return;}
	//if (yearp==""||monthp==""||dayp==""||hourp==""||sumTypep==""||typep=="") {displayImage();return;}
    if (yearp=="" && monthp=="" && dayp=="" && hourp=="" && sumTypep=="" && typep=="") { displayImage(); return; }

    var dropdownlistbox = document.getElementById("set_year");
    dropdownlistbox.selectedIndex = dropdownlistbox.length -1; 
    for(var x=0;x < dropdownlistbox.length; x++) {
	if(yearp == dropdownlistbox.options[x].value){
	    dropdownlistbox.selectedIndex = x;
	}
    }
    dropdownlistbox = document.getElementById("set_month"); 
    dropdownlistbox.selectedIndex = 0; 
    for(var x=0;x < dropdownlistbox.length; x++) {
	if(monthp == dropdownlistbox.options[x].value){
	    dropdownlistbox.selectedIndex = x;
	}
    }
    dropdownlistbox = document.getElementById("set_day"); 
    dropdownlistbox.selectedIndex = 0; 
    for(var x=0;x < dropdownlistbox.length; x++) {
	if(dayp == dropdownlistbox.options[x].value){
	    dropdownlistbox.selectedIndex = x;
	}
    }
    dropdownlistbox = document.getElementById("sumplotType"); 
    dropdownlistbox.selectedIndex = 0; 
    for(var x=0;x < dropdownlistbox.length; x++) {
	if(sumTypep == dropdownlistbox.options[x].value){
	    dropdownlistbox.selectedIndex = x;
	    selindex = x;
	}
    }
    dont_load_image = 1;
    updateMenus(selindex); 
	
    dropdownlistbox = document.getElementById("subtype"); 
    dropdownlistbox.selectedIndex = 0; 
    for(var x=0;x < dropdownlistbox.length; x++) {
	if(typep == dropdownlistbox.options[x].value){
	    dropdownlistbox.selectedIndex = x;
	}
    }	
    dropdownlistbox = document.getElementById("hour"); 
    dropdownlistbox.selectedIndex = 0; 
    for(var x=0;x < dropdownlistbox.length; x++) {
	if(hourp == dropdownlistbox.options[x].value){
	    dropdownlistbox.selectedIndex = x;
	} 
    }
	
    dont_load_image = 1; 
    syncBottomToTop();
    //updateMenus(0);
    displayImage();
}

window.onload=function(){goto_page();displayImage();};
</script>

<!-- End major embedded javascript functions -->
	
</head>

<body>
<div id="ddtopmenubar" class="mattblackmenu">
<ul>
<li><a href="http://maven.ssl.berkeley.edu/">SSL MAVEN Home</a></li>
</ul>
</div>

<script type="text/javascript">
ddlevelsmenu.setup("ddtopmenubar", "topbar") //ddlevelsmenu.setup("mainmenuid", "topbar|sidebar")
</script>

<form action="" name="weboptions" id="weboptions">

<form action="" name="weboptions" id="weboptions">

<table align='center' cellspacing=0 cellpadding=0 id="t1">
  <tr>
		<td nowrap>		
		
		<input type='button' name='last_plot' onclick="changeImgSrc('dec')" value='&#60;&#60; Last'>
		
							<select name="set_year" id="set_year" onchange="syncBottomToTop();">
								<option value="2014" />2014
								<option value="2015" />2015
								<option value="2016" />2016
								<option value="2017" />2017
								<option value="2018" />2018
								<option value="2019" />2019
								<option value="2020" />2020
								<option value="2021" />2021
								<option value="2022" />2022
								<option value="2023" />2023
								<option value="2024" />2024
								<option value="2025" />2025
								<option value="2026" />2026
							</select>
							
							<select name="set_month" id="set_month" onchange="syncBottomToTop()">
								<option value="01" />Jan
								<option value="02" />Feb
								<option value="03" />Mar
								<option value="04" />Apr
								<option value="05" />May
								<option value="06" />Jun
								<option value="07" />Jul
								<option value="08" />Aug
								<option value="09" />Sep
								<option value="10" />Oct
								<option value="11" />Nov
								<option value="12" />Dec
							</select>
							
							<select name="set_day" id="set_day" onchange="syncBottomToTop()">
								<option value="01" />01
								<option value="02" />02
								<option value="03" />03
								<option value="04" />04
								<option value="05" />05
								<option value="06" />06
								<option value="07" />07
								<option value="08" />08
								<option value="09" />09
								<option value="10" />10
								<option value="11" />11
								<option value="12" />12
								<option value="13" />13
								<option value="14" />14
								<option value="15" />15
								<option value="16" />16
								<option value="17" />17
								<option value="18" />18
								<option value="19" />19
								<option value="20" />20
								<option value="21" />21
								<option value="22" />22
								<option value="23" />23
								<option value="24" />24
								<option value="25" />25
								<option value="26" />26
								<option value="27" />27
								<option value="28" />28
								<option value="29" />29
								<option value="30" />30
								<option value="31" />31
							</select>
						
							<select name="hour" id="hour" onchange="syncBottomToTop()">
							</select>

							<select name="sumplotType" id="sumplotType" onChange="updateMenus(this.selectedIndex)">
								<option value='mvn' />MAVEN PFP
							</select>
					
                                                	<select name='subtype' id="subtype" onChange="autoloadDisplayImage()">
							</select>
					
					
							<input type='button' name='next_plot' onclick="changeImgSrc('inc')" value='Next &#62;&#62;'>

       </td>
  </tr>
</table>
</form>

<table align='center' border=0 id="t3">
	<tr id="t3r1">
		<td align="center" id="t3r1c1">
			<div id="d1" onmousedown="click_coord(event)">
				<img src="" id="showtheimg" name="showtheimg" alt="image" onerror="nodata()" /> 
			</div>
		</td>
	</tr>
</table>

<!--
<table align='center' border=0>
	<tr>
		<td colspan="4">
  		<input type="text" id="displayimage" size="100">
		</td>
	</tr>
</table>
-->

<script>//displayImage()</script>

<!-- Plot and Zoom Keys -->


<form action="" name="weboptions_bottom" id="weboptions_bottom">

<table align='center' cellspacing=0 cellpadding=0 id="t1">
  <tr>
		<td nowrap>	
						<input type="button" name="last_plot_bottom" onclick="changeImgSrc('dec')" value='&#60;&#60; Last'>						
							<select name="set_year_bottom" id="set_year_bottom"  onchange="syncTopToBottom();">
								<option value="2014" />2014
								<option value="2015" />2015
								<option value="2016" />2016
								<option value="2017" />2017
								<option value="2018" />2018
								<option value="2019" />2019
								<option value="2020" />2020
								<option value="2021" />2021
								<option value="2022" />2022
								<option value="2023" />2023
								<option value="2024" />2024
								<option value="2025" />2025
								<option value="2026" />2026
							</select>
							<select name="set_month_bottom" id="set_month_bottom" onchange="syncTopToBottom()">
								<option value="01" />Jan
								<option value="02" />Feb
								<option value="03" />Mar
								<option value="04" />Apr
								<option value="05" />May
								<option value="06" />Jun
								<option value="07" />Jul
								<option value="08" />Aug
								<option value="09" />Sep
								<option value="10" />Oct
								<option value="11" />Nov
								<option value="12" />Dec
							</select>
							<select name="set_day_bottom" id="set_day_bottom" onchange="syncTopToBottom()">
								<option value="01" />01
								<option value="02" />02
								<option value="03" />03
								<option value="04" />04
								<option value="05" />05
								<option value="06" />06
								<option value="07" />07
								<option value="08" />08
								<option value="09" />09
								<option value="10" />10
								<option value="11" />11
								<option value="12" />12
								<option value="13" />13
								<option value="14" />14
								<option value="15" />15
								<option value="16" />16
								<option value="17" />17
								<option value="18" />18
								<option value="19" />19
								<option value="20" />20
								<option value="21" />21
								<option value="22" />22
								<option value="23" />23
								<option value="24" />24
								<option value="25" />25
								<option value="26" />26
								<option value="27" />27
								<option value="28" />28
								<option value="29" />29
								<option value="30" />30
								<option value="31" />31
							</select>
						
							<select name="hour_bottom" id="hour_bottom" onchange="syncTopToBottom()">
							</select>

							<select name="sumplotType_bottom" id="sumplotType_bottom" onChange="updateMenusBottom(this.selectedIndex)">
								<option value='mvn' />MAVEN PFP
							</select>

                                                	<select name="subtype_bottom" id="subtype_bottom" onChange="autoloadDisplayImageBottom()">
							</select>

							<input type="button" name="next_plot_bottom" onclick="changeImgSrc('inc')" value='Next &#62;&#62;'>
       </td>
  </tr>
</table>
</form>

<font color="#ffffff" size="4"><div align="center" id="textNote" name="textNote">Test MVN PFP Browser</div></font>

<div><input type="hidden" id="orbno" name="orbno" value="00FIRST"></div>


<p>&nbsp;</p>

<script>//firstLoad()</script>
<script>//updateMenus(0)</script>

</body>
</html>
